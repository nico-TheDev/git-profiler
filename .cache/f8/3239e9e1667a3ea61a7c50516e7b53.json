{"id":"../node_modules/github-colors/lib/index.js","dependencies":[{"name":"F:\\Nico\\Web Development\\Websites\\github-profiler\\package.json","includedInParent":true,"mtime":1597196816058},{"name":"F:\\Nico\\Web Development\\Websites\\github-profiler\\node_modules\\github-colors\\package.json","includedInParent":true,"mtime":1597027848785},{"name":"./extensions","loc":{"line":26,"column":60},"parent":"F:\\Nico\\Web Development\\Websites\\github-profiler\\node_modules\\github-colors\\lib\\index.js","resolved":"F:\\Nico\\Web Development\\Websites\\github-profiler\\node_modules\\github-colors\\lib\\extensions.json"},{"name":"./colors","loc":{"line":29,"column":48},"parent":"F:\\Nico\\Web Development\\Websites\\github-profiler\\node_modules\\github-colors\\lib\\index.js","resolved":"F:\\Nico\\Web Development\\Websites\\github-profiler\\node_modules\\github-colors\\lib\\colors.json"}],"generated":{"js":"\"use strict\";\n\n/*!\n * GitHubColors\n *\n * @name GitHubColors\n * @function\n * @return {undefined}\n */\nfunction GitHubColors() {\n    this.colors = null;\n    this.extensions = null;\n}\n\n/**\n * init\n * Inits the GitHub extensions/colors.\n *\n * @name init\n * @function\n * @param {Boolean} ext If `true`, the extensions will be initialized.\n * @return {Object} The `extensions` or `colors` object.\n */\nGitHubColors.prototype.init = function (ext) {\n    if (ext) {\n        return this.extensions = this.extensions || require(\"./extensions\");\n    }\n\n    return this.colors = this.colors || require(\"./colors\");\n};\n\n/**\n * get\n * Gets the color object for the provided language.\n *\n * @name get\n * @function\n * @param {String} lang The language to get the color for.\n * @param {Boolean} handleOthers If `false` and the color is not found `undefined` will be returned. Otherwise a gray color will be returned.\n * @return {Object|undefined} The color that was found.\n */\nGitHubColors.prototype.get = function (lang, handleOthers) {\n    this.init();\n    var found = this.colors[lang];\n    if (handleOthers) {\n        found = found || {};\n        found.color = found.color || \"#ccc\";\n    }\n    return found;\n};\n\n/**\n * ext\n * Get the color object for the provided extension.\n *\n * @name ext\n * @function\n * @param {String} ext The extension to get the color for.\n * @param {Boolean} handleOthers If `false` and the color is not found `undefined` will be returned. Otherwise a gray color will be returned.\n * @return {Object|undefined} The color that was found.\n */\nGitHubColors.prototype.ext = function (ext, handleOthers) {\n    this.init(true);\n    var found = this.extensions[ext];\n    if (handleOthers) {\n        found = found || {};\n        found.color = found.color || \"#ccc\";\n    }\n    return found;\n};\n\nmodule.exports = new GitHubColors();"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/github-colors/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/github-colors/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}}],"sources":{"../node_modules/github-colors/lib/index.js":"\"use strict\";\n\n/*!\n * GitHubColors\n *\n * @name GitHubColors\n * @function\n * @return {undefined}\n */\nfunction GitHubColors() {\n    this.colors = null;\n    this.extensions = null;\n}\n\n/**\n * init\n * Inits the GitHub extensions/colors.\n *\n * @name init\n * @function\n * @param {Boolean} ext If `true`, the extensions will be initialized.\n * @return {Object} The `extensions` or `colors` object.\n */\nGitHubColors.prototype.init = function (ext) {\n    if (ext) {\n        return this.extensions = this.extensions || require(\"./extensions\");\n    }\n\n    return this.colors = this.colors || require(\"./colors\");\n};\n\n/**\n * get\n * Gets the color object for the provided language.\n *\n * @name get\n * @function\n * @param {String} lang The language to get the color for.\n * @param {Boolean} handleOthers If `false` and the color is not found `undefined` will be returned. Otherwise a gray color will be returned.\n * @return {Object|undefined} The color that was found.\n */\nGitHubColors.prototype.get = function (lang, handleOthers) {\n    this.init();\n    var found = this.colors[lang];\n    if (handleOthers) {\n        found = found || {};\n        found.color = found.color || \"#ccc\";\n    }\n    return found;\n};\n\n/**\n * ext\n * Get the color object for the provided extension.\n *\n * @name ext\n * @function\n * @param {String} ext The extension to get the color for.\n * @param {Boolean} handleOthers If `false` and the color is not found `undefined` will be returned. Otherwise a gray color will be returned.\n * @return {Object|undefined} The color that was found.\n */\nGitHubColors.prototype.ext = function (ext, handleOthers) {\n    this.init(true);\n    var found = this.extensions[ext];\n    if (handleOthers) {\n        found = found || {};\n        found.color = found.color || \"#ccc\";\n    }\n    return found;\n};\n\nmodule.exports = new GitHubColors();"},"lineCount":72}},"error":null,"hash":"a00e5a0f3596116579c7a2088698de9c","cacheData":{"env":{}}}