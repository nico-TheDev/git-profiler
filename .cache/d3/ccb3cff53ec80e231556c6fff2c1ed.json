{"id":"../node_modules/typpy/lib/index.js","dependencies":[{"name":"F:\\Nico\\Web Development\\Websites\\github-profiler\\package.json","includedInParent":true,"mtime":1597196816058},{"name":"F:\\Nico\\Web Development\\Websites\\github-profiler\\node_modules\\typpy\\package.json","includedInParent":true,"mtime":1597027850066},{"name":"function.name","loc":{"line":3,"column":8},"parent":"F:\\Nico\\Web Development\\Websites\\github-profiler\\node_modules\\typpy\\lib\\index.js","resolved":"F:\\Nico\\Web Development\\Websites\\github-profiler\\node_modules\\function.name\\lib\\index.js"}],"generated":{"js":"\"use strict\";\n\nrequire(\"function.name\");\n\n/**\n * Typpy\n * Gets the type of the input value or compares it\n * with a provided type.\n *\n * Usage:\n *\n * ```js\n * Typpy({}) // => \"object\"\n * Typpy(42, Number); // => true\n * Typpy.get([], \"array\"); => true\n * ```\n *\n * @name Typpy\n * @function\n * @param {Anything} input The input value.\n * @param {Constructor|String} target The target type.\n * It could be a string (e.g. `\"array\"`) or a\n * constructor (e.g. `Array`).\n * @return {String|Boolean} It returns `true` if the\n * input has the provided type `target` (if was provided),\n * `false` if the input type does *not* have the provided type\n * `target` or the stringified type of the input (always lowercase).\n */\nfunction Typpy(input, target) {\n    if (arguments.length === 2) {\n        return Typpy.is(input, target);\n    }\n    return Typpy.get(input, true);\n}\n\n/**\n * Typpy.is\n * Checks if the input value has a specified type.\n *\n * @name Typpy.is\n * @function\n * @param {Anything} input The input value.\n * @param {Constructor|String} target The target type.\n * It could be a string (e.g. `\"array\"`) or a\n * constructor (e.g. `Array`).\n * @return {Boolean} `true`, if the input has the same\n * type with the target or `false` otherwise.\n */\nTyppy.is = function (input, target) {\n    return Typpy.get(input, typeof target === \"string\") === target;\n};\n\n/**\n * Typpy.get\n * Gets the type of the input value. This is used internally.\n *\n * @name Typpy.get\n * @function\n * @param {Anything} input The input value.\n * @param {Boolean} str A flag to indicate if the return value\n * should be a string or not.\n * @return {Constructor|String} The input value constructor\n * (if any) or the stringified type (always lowercase).\n */\nTyppy.get = function (input, str) {\n\n    if (typeof input === \"string\") {\n        return str ? \"string\" : String;\n    }\n\n    if (null === input) {\n        return str ? \"null\" : null;\n    }\n\n    if (undefined === input) {\n        return str ? \"undefined\" : undefined;\n    }\n\n    if (input !== input) {\n        return str ? \"nan\" : NaN;\n    }\n\n    return str ? input.constructor.name.toLowerCase() : input.constructor;\n};\n\nmodule.exports = Typpy;"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/typpy/lib/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../node_modules/typpy/lib/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}}],"sources":{"../node_modules/typpy/lib/index.js":"\"use strict\";\n\nrequire(\"function.name\");\n\n/**\n * Typpy\n * Gets the type of the input value or compares it\n * with a provided type.\n *\n * Usage:\n *\n * ```js\n * Typpy({}) // => \"object\"\n * Typpy(42, Number); // => true\n * Typpy.get([], \"array\"); => true\n * ```\n *\n * @name Typpy\n * @function\n * @param {Anything} input The input value.\n * @param {Constructor|String} target The target type.\n * It could be a string (e.g. `\"array\"`) or a\n * constructor (e.g. `Array`).\n * @return {String|Boolean} It returns `true` if the\n * input has the provided type `target` (if was provided),\n * `false` if the input type does *not* have the provided type\n * `target` or the stringified type of the input (always lowercase).\n */\nfunction Typpy(input, target) {\n    if (arguments.length === 2) {\n        return Typpy.is(input, target);\n    }\n    return Typpy.get(input, true);\n}\n\n/**\n * Typpy.is\n * Checks if the input value has a specified type.\n *\n * @name Typpy.is\n * @function\n * @param {Anything} input The input value.\n * @param {Constructor|String} target The target type.\n * It could be a string (e.g. `\"array\"`) or a\n * constructor (e.g. `Array`).\n * @return {Boolean} `true`, if the input has the same\n * type with the target or `false` otherwise.\n */\nTyppy.is = function (input, target) {\n    return Typpy.get(input, typeof target === \"string\") === target;\n};\n\n/**\n * Typpy.get\n * Gets the type of the input value. This is used internally.\n *\n * @name Typpy.get\n * @function\n * @param {Anything} input The input value.\n * @param {Boolean} str A flag to indicate if the return value\n * should be a string or not.\n * @return {Constructor|String} The input value constructor\n * (if any) or the stringified type (always lowercase).\n */\nTyppy.get = function (input, str) {\n\n    if (typeof input === \"string\") {\n        return str ? \"string\" : String;\n    }\n\n    if (null === input) {\n        return str ? \"null\" : null;\n    }\n\n    if (undefined === input) {\n        return str ? \"undefined\" : undefined;\n    }\n\n    if (input !== input) {\n        return str ? \"nan\" : NaN;\n    }\n\n    return str ? input.constructor.name.toLowerCase() : input.constructor;\n};\n\nmodule.exports = Typpy;"},"lineCount":86}},"error":null,"hash":"b7cee126746e9e7a81ab5ea631f51a67","cacheData":{"env":{}}}